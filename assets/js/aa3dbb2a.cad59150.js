"use strict";(self.webpackChunkcoding_interview=self.webpackChunkcoding_interview||[]).push([[926],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return p}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),a=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):u(u({},n),e)),r},l=function(e){var n=a(e.components);return t.createElement(s.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=a(r),p=o,d=m["".concat(s,".").concat(p)]||m[p]||f[p]||i;return r?t.createElement(d,u(u({ref:n},l),{},{components:r})):t.createElement(d,u({ref:n},l))}));function p(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,u=new Array(i);u[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,u[1]=c;for(var a=2;a<i;a++)u[a]=r[a];return t.createElement.apply(null,u)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8685:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return a},default:function(){return f}});var t=r(7462),o=r(3366),i=(r(7294),r(3905)),u=["components"],c={},s={unversionedId:"solutions/sum-of-k-mirror-numbers",id:"solutions/sum-of-k-mirror-numbers",isDocsHomePage:!1,title:"2081. Sum of k-Mirror Numbers",description:"`python",source:"@site/docs/solutions/2081_sum-of-k-mirror-numbers.md",sourceDirName:"solutions",slug:"/solutions/sum-of-k-mirror-numbers",permalink:"/coding-interview/docs/solutions/sum-of-k-mirror-numbers",editUrl:"https://github.com/tianhaoz95-notebooks/coding-interview/edit/main/docs/solutions/2081_sum-of-k-mirror-numbers.md",version:"current",sidebarPosition:2081,frontMatter:{},sidebar:"solutionsSidebar",previous:{title:"2080. Range Frequency Queries",permalink:"/coding-interview/docs/solutions/range-frequency-queries"}},a=[],l={toc:a};function f(e){var n=e.components,r=(0,o.Z)(e,u);return(0,i.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def kMirror(self, b: int, n: int) -> int:\n        res = 0\n        cnt = 0\n        def get_next_attempt():\n            for l in range(30):\n                for v in range(10**l,10**(l+1)):\n                    s = str(v) + str(v)[::-1][1:]\n                    yield int(s)\n                for v in range(10**l,10**(l+1)):\n                    s = str(v) + str(v)[::-1]\n                    yield int(s)\n        for num in get_next_attempt():\n            new_num = []\n            k = 0\n            curr = num\n            while curr:\n                new_num += [curr%b]\n                curr //= b\n            if new_num == new_num[::-1]:\n                res += 1\n                cnt += num\n            if res == n:\n                return cnt\n")))}f.isMDXComponent=!0}}]);