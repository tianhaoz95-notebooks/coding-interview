"use strict";(self.webpackChunkcoding_interview=self.webpackChunkcoding_interview||[]).push([[189],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=i,d=p["".concat(u,".").concat(f)]||p[f]||m[f]||o;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7957:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={},u="1870. Minimum Speed to Arrive on Time",l={unversionedId:"solutions/minimum-speed-to-arrive-on-time",id:"solutions/minimum-speed-to-arrive-on-time",title:"1870. Minimum Speed to Arrive on Time",description:"We can visaulize the problem with the following graph:",source:"@site/docs/solutions/1870__minimum-speed-to-arrive-on-time.md",sourceDirName:"solutions",slug:"/solutions/minimum-speed-to-arrive-on-time",permalink:"/coding-interview/docs/solutions/minimum-speed-to-arrive-on-time",editUrl:"https://github.com/tianhaoz95-notebooks/coding-interview/edit/main/docs/solutions/1870__minimum-speed-to-arrive-on-time.md",tags:[],version:"current",sidebarPosition:1870,frontMatter:{},sidebar:"solutionsSidebar",previous:{title:"1869. Longer Contiguous Segments of Ones than Zeros",permalink:"/coding-interview/docs/solutions/longer-contiguous-segments-of-ones-than-zeros"},next:{title:"1871. Jump Game VII",permalink:"/coding-interview/docs/solutions/jump-game-vii"}},c=[],m={toc:c};function p(e){var t=e.components,s=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"1870-minimum-speed-to-arrive-on-time"},"1870. Minimum Speed to Arrive on Time"),(0,o.kt)("p",null,"We can visaulize the problem with the following graph:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"convert problem to graph",src:n(4223).Z,width:"1082",height:"594"})),(0,o.kt)("p",null,"At this point, we can say that this is a binary search problem."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from math import ceil\n\nclass Solution:\n  def computeArrivalTime(self, dist: List[int], v: int) -> float:\n    return sum([ceil(d / v) for d in dist[:-1]] + [dist[-1]/v])\n  \n  def bSearch(self, dist: List[int], hour: float) -> int:\n    lo = 10**-7\n    hi = 10**7 + 1\n    while lo + 1 < hi:\n      mid = (lo + hi) // 2\n      if self.computeArrivalTime(dist, mid) <= hour:\n        hi = mid\n      else:\n        lo = mid\n    return int(hi)\n  \n  def minSpeedOnTime(self, dist: List[int], hour: float) -> int:\n    if hour <= len(dist) - 1:\n      return -1\n    return self.bSearch(dist, hour)\n")))}p.isMDXComponent=!0},4223:function(e,t,n){t.Z=n.p+"assets/images/convert_problem_to_graph-7ce7faa1935753a545314a39e2bbdc13.png"}}]);