(self.webpackChunkcoding_interview=self.webpackChunkcoding_interview||[]).push([[55],{3397:function(n,o,e){"use strict";e.r(o),e.d(o,{frontMatter:function(){return s},metadata:function(){return r},toc:function(){return u},default:function(){return l}});var i=e(2122),t=e(9756),a=(e(7294),e(3905)),s={},r={unversionedId:"solutions/maximum-population-year",id:"solutions/maximum-population-year",isDocsHomePage:!1,title:"1854. Maximum Population Year",description:"`python",source:"@site/docs/solutions/1854__maximum-population-year.md",sourceDirName:"solutions",slug:"/solutions/maximum-population-year",permalink:"/coding-interview/docs/solutions/maximum-population-year",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/solutions/1854__maximum-population-year.md",version:"current",sidebarPosition:1854,frontMatter:{},sidebar:"solutionsSidebar",previous:{title:"Home",permalink:"/coding-interview/docs/solutions/index"},next:{title:"1855. Maximum Distance Between a Pair of Values",permalink:"/coding-interview/docs/solutions/maximum-distance-between-a-pair-of-values"}},u=[],m={toc:u};function l(n){var o=n.components,e=(0,t.Z)(n,["components"]);return(0,a.kt)("wrapper",(0,i.Z)({},m,e,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Solution(object):\n  def maximumPopulation(self, logs):\n    cnt = [0 for i in range(2060)]\n    for log in logs:\n      for i in range(log[0], log[1], 1):\n        cnt[i] += 1\n    return cnt.index(max(cnt))\n")))}l.isMDXComponent=!0}}]);